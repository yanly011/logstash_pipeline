input {
        file {
             path => "C:/Users/hsllya/Downloads/logstash/prodlogging-small-1.csv"
             start_position => "beginning"
             sincedb_path => "nul"
        }
}
        
filter {
        csv {
                separator => ","
                 columns => [ "Timestamp", "SeverityName", "EventName", "EntityName", "Application", "Operation", "TransactionId", "SessionId", "OperationId", "PartyName", "ClientId", "Host", "LogId" ]
        }
			
		mutate {strip => ["SeverityName", "SeverityName"] convert => ["SeverityName", "string"]}
		mutate {strip => ["EventName", "EventName"] convert => ["EventName", "string"]}
		mutate {strip => ["EntityName", "EntityName"] convert => ["EntityName", "string"]}
		mutate {strip => ["Application", "Application"] convert => ["Application", "string"]}
		mutate {convert => ["Operation", "string"]}
		mutate {strip => ["TransactionId", "TransactionId"] convert => ["TransactionId", "string"]}
		mutate {strip => ["SessionId", "SessionId"] convert => ["SessionId", "string"]}
		mutate {strip => ["OperationId", "OperationId"] convert => ["OperationId", "string"]}
		mutate {strip => ["PartyName", "PartyName"] convert => ["PartyName", "string"]}
		mutate {strip => ["ClientId", "ClientId"] convert => ["ClientId", "string"]}
		mutate {strip => ["Host", "Host"] convert => ["Host", "string"]}
		mutate {convert => ["LogId", "integer"]}
					
		date {
			  match => ["Timestamp", "YYYY-MM-dd HH:mm:ss.SSS"]
			  target => "@timestamp"
			  remove_field => ["Timestamp"]
		}
			
		if [EventName] == "Sending" and [EntityName] == "Response" {
		    mutate { add_tag => ["sessionend"] }
		}
		else if[EventName] == "Received" and [EntityName] == "Request"{
		    mutate { add_tag => ["sessionstart"] }
		}
					
		elapsed {
			start_tag => "sessionstart"
			end_tag => "sessionend"
			unique_id_field => "SessionId"
		}
			
				
}

output {
       elasticsearch {
                     index => "logstash_test_1"
                     document_type => "logtestdoc"
       }
       stdout {}
}